name: Getmybeats CICD

on:
  push:

jobs:
  test-ui:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [22.3.0]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'  # or 'yarn' if you use yarn

      - name: Install dependencies
        run: npm install

      - name: Run Node App
        run: npm start

  test-api:
    runs-on: ubuntu-22.04
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.12.7]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      env:
        DJANGO_SECRET_KEY: ${{ vars.DJANGO_SECRET_KEY }}
        DJANGO_SETTINGS_MODULE: ${{ vars.DJANGO_SETTINGS_MODULE }}
        AWS_ACCESS_KEY: ${{ vars.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ vars.AWS_SECRET_ACCESS_KEY }}
        DATABASE_SETTINGS: ${{ vars.DATABASE_SETTINGS }}
        S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
        S3_BUCKET_URL: ${{ vars.S3_BUCKET_URL }}
        DIGITALOCEAN_SETTINGS: ${{ vars.DIGITALOCEAN_SETTINGS }}
        REDIS_SETTINGS: ${{ vars.REDIS_SETTINGS }}
        REGION: ${{ vars.REGION }}
      run: |
        python manage.py test
