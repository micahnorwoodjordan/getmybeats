# Generated by Django 4.1.4 on 2024-01-25 05:05
import os
from django.db import migrations


def populate_s3_audio_upload_path(apps, schema_editor):
    # `s3_audio_upload_path` needs to be unique, but there are already existing records. helps avoid an IntegrityError
    # https://docs.djangoproject.com/en/4.1/howto/writing-migrations/#migrations-that-add-unique-fields
    s3_bucket = 'getmybeats-audio'
    Audio = apps.get_model('GetMyBeatsApp', 'Audio')
    for audio in Audio.objects.all():
        basename = os.path.basename(str(audio.audio_file_upload))
        audio.s3_audio_upload_path = f's3://{s3_bucket}/{basename}'
        audio.save(update_fields=['s3_audio_upload_path'])


def populate_s3_artwork_upload_path(apps, schema_editor):
    # `s3_audio_upload_path` needs to be unique, but there are already existing records. helps avoid an IntegrityError
    # https://docs.djangoproject.com/en/4.1/howto/writing-migrations/#migrations-that-add-unique-fields
    s3_bucket = 'getmybeats-images'
    Audio = apps.get_model('GetMyBeatsApp', 'Audio')
    for audio in Audio.objects.all():
        basename = os.path.basename(str(audio.audio_file_upload)).replace('.wav', '.jpeg')
        audio.s3_artwork_upload_path = f's3://{s3_bucket}/{basename}'
        audio.save(update_fields=['s3_artwork_upload_path'])


class Migration(migrations.Migration):

    dependencies = [
        ('GetMyBeatsApp', '0005_'),
    ]

    operations = [
        migrations.RunPython(populate_s3_audio_upload_path, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(populate_s3_artwork_upload_path, reverse_code=migrations.RunPython.noop),
    ]
