services:
  frontend-build:
    build:
        dockerfile: dev/Dockerfile.frontend.dev
        context: ./..
    ports:
      - 4200:4200
    volumes:
      - ../:/application/getmybeats
    command: bash -c "
      cd /application/getmybeats/frontend-v3/src &&
      npm install -g @angular/cli && npm install --package-lock-only &&
      npm install --save-dev @angular-devkit/build-angular@17.3.3 &&
      ng build --configuration development"
  api-build:
    build:
      dockerfile: dev/Dockerfile.backend.dev
      context: ./..
    ports:
      - 8000:8000
      - 80:80
    command: /bin/bash -c "
      systemctl start cron &&
      cd /application/getmybeats/ && aws s3 sync s3://getmybeats-audio-dev ./ &&
      cd /application/getmybeats &&
      python3 dev/cron/prepare_env.py &&
      . /opt/venvs/getmybeats/bin/activate &&
      ./manage.py migrate GetMyBeatsApp &&
      ./manage.py collectstatic --no-input &&
      echo 'starting gunicorn' && 
      /opt/venvs/getmybeats/bin/gunicorn -c dev/gunicorn/config.py GetMyBeatsSettings.wsgi --daemon --reload &&
      echo 'echo starting nginx' && sudo systemctl restart nginx &&
      tail -f /var/log/nginx/access.log"
    volumes:
      - ../:/application/getmybeats
      - ./nginx/dev.nginx.conf:/etc/nginx/nginx.conf
    env_file:
      .env
    depends_on:
      db:
        condition: service_healthy
      frontend-build:
        condition: service_completed_successfully
      redis:
        condition: service_started
  db:
    ports:
      - 3307:3306
    command: "mysqld --sql-mode NO_ENGINE_SUBSTITUTION --disable-log-bin"
    image: mysql:8
    volumes:    
      - ./db:/root/db
    environment:
      MYSQL_USER: "mysql"
      MYSQL_DATABASE: "getmybeats_local_old"
      MYSQL_PASSWORD: "Password1!"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: "Password1!"
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 5s
        retries: 1
  dbimport:
    volumes:    
      - ./db:/root/db
    image: mysql:8
    entrypoint: "sh /root/db/import_db.sh"
    environment:
      MYSQL_USER: "mysql"
      MYSQL_DATABASE: "getmybeats_local_old"
      MYSQL_PASSWORD: "Password1!"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: "Password1!"
      MYSQL_HOST: "db"
    depends_on:
      db:
        # https://stackoverflow.com/questions/42567475/docker-compose-check-if-mysql-connection-is-ready
        condition: service_healthy
  redis:
    command: redis-server
    image: redis
    env_file:
      - .env
  api-testing:
    build:
        dockerfile: dev/Dockerfile.backend.dev
        context: ./..
    ports:
      - 8000:8000
      - 80:80
    command: /bin/bash -c "
      systemctl start cron &&
      cd /application/getmybeats/media && aws s3 sync s3://getmybeats-audio-dev ./ &&
      cd /application/getmybeats &&
      python3 dev/cron/prepare_env.py &&
      . /opt/venvs/getmybeats/bin/activate &&
      ./manage.py migrate GetMyBeatsApp &&
      ./manage.py collectstatic --no-input &&
      echo 'starting gunicorn' && 
      /opt/venvs/getmybeats/bin/gunicorn -c dev/gunicorn/config.py GetMyBeatsSettings.wsgi --daemon --reload &&
      echo 'echo starting nginx' && sudo systemctl restart nginx &&
      tail -f /var/log/nginx/access.log"
    volumes:
      - ../:/application/getmybeats
      - ../media:/application/getmybeats/media
      - ./nginx/dev.nginx.conf:/etc/nginx/nginx.conf
    env_file:
      .env
    depends_on:
      db:
        condition: service_healthy
      frontend-testing:
        condition: service_started
      redis:
        condition: service_started
      dbimport:
        condition: service_started
  frontend-testing:
    build:
        dockerfile: dev/Dockerfile.frontend.dev
        context: ./..
    ports:
      - 4200:4200
    volumes:
      - ../:/application/getmybeats
    command: bash -c "
      cd /application/getmybeats/frontend-v3/src &&
      npm install -g @angular/cli && npm install --package-lock-only &&
      npm install --save-dev @angular-devkit/build-angular@17.3.3 &&
      ng build --configuration development && tail -f /dev/null"

