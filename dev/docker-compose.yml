services:
  api:
    build:
      dockerfile: dev/Dockerfile.dev
      context: ./..
    ports:
    - 8000:8000
    command: /bin/bash -c "
      cd /application/getmybeats &&
      echo 'starting gunicorn' &&
      gunicorn -c dev/gunicorn/config.py GetMyBeatsSettings.wsgi
      "
    volumes:
      - ../:/application/getmybeats
    env_file:
      - .env
    depends_on:
      - db
  db:
    ports:
      - 3307:3306
    command: "mysqld --sql-mode NO_ENGINE_SUBSTITUTION --disable-log-bin"
    image: mysql:8
    volumes:    
     - ./db:/root/db
    environment:
      MYSQL_USER: "mysql"
      MYSQL_DATABASE: "getmybeats_local_old"
      MYSQL_PASSWORD: "Password1!"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: "Password1!"
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 5s
        retries: 1
  dbimport:
    volumes:    
      - ./db:/root/db
    image: mysql:8
    entrypoint: "sh /root/db/import_db.sh"
    environment:
      MYSQL_USER: "mysql"
      MYSQL_DATABASE: "getmybeats_local_old"
      MYSQL_PASSWORD: "Password1!"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: "Password1!"
      MYSQL_HOST: "db"
    depends_on:
      db:
        # https://stackoverflow.com/questions/42567475/docker-compose-check-if-mysql-connection-is-ready
        condition: service_healthy
  redis:
    command: redis-server
    image: redis
    env_file:
      - .env
  web:
    ports:
    - 81:80
    image: nginx
    volumes:
      - ./nginx/dev.nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/test.html:/etc/nginx/html/index.html
    environment:
      NGINX_HOST: "127.0.0.1"
      NGINX_PORT: "80"
    depends_on:
      - api


volumes:
  dbmock:
  nginx:
